{
	"info": {
		"_postman_id": "fa0b80cf-844b-49ae-a0c4-39a2586e7b1f",
		"name": "NewmanCustomFDSv4",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "16531968"
	},
	"item": [
		{
			"name": "Factory already exists?",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if(pm.response.code == 200) postman.setNextRequest(\"Factory is running?\")"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{DockerPort}}/containers/{{FactoryName}}/json",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{DockerPort}}",
					"path": [
						"containers",
						"{{FactoryName}}",
						"json"
					]
				}
			},
			"response": []
		},
		{
			"name": "Pull Network Factory Image",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{DockerPort}}/images/create?fromImage=msoderi/network-factory&tag={{FactoryVersion}}",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{DockerPort}}",
					"path": [
						"images",
						"create"
					],
					"query": [
						{
							"key": "fromImage",
							"value": "msoderi/network-factory"
						},
						{
							"key": "tag",
							"value": "{{FactoryVersion}}"
						}
					]
				},
				"description": "Thanks to this request, the msoderi/network-factory Docker Image becomes available in your local Docker installation, or in the specified DockerHost, if different from the default (localhost). The image is retrieved from Docker Hub."
			},
			"response": []
		},
		{
			"name": "Create Network Factory",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": " {\r\n     \"Image\": \"msoderi/network-factory:{{FactoryVersion}}\",\r\n     \"HostConfig\": {\r\n         \"PortBindings\": {\r\n             \"1880/tcp\": [\r\n                 {\r\n                     \"HostPort\": \"{{FactoryPort}}\"\r\n                 }\r\n             ]\r\n         }\r\n     },\r\n     \"ExposedPorts\": {\r\n         \"1880/tcp\": {}\r\n     }\r\n }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{DockerHost}}:{{DockerPort}}/containers/create?name={{FactoryName}}",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{DockerPort}}",
					"path": [
						"containers",
						"create"
					],
					"query": [
						{
							"key": "name",
							"value": "{{FactoryName}}"
						}
					]
				},
				"description": "Thanks to this request, the msoderi/network-factory Docker Image becomes available in your local Docker installation, or in the specified DockerHost, if different from the default (localhost). The image is retrieved from Docker Hub."
			},
			"response": []
		},
		{
			"name": "Factory is running?",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if(JSON.parse(responseBody).State.Running) postman.setNextRequest(\"Newman Fence\")"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{DockerPort}}/containers/{{FactoryName}}/json",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{DockerPort}}",
					"path": [
						"containers",
						"{{FactoryName}}",
						"json"
					]
				}
			},
			"response": []
		},
		{
			"name": "Start Network Factory",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"setTimeout(function(){}, 10000);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{DockerPort}}/containers/{{FactoryName}}/start",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{DockerPort}}",
					"path": [
						"containers",
						"{{FactoryName}}",
						"start"
					]
				},
				"description": "Through this request, you start the Docker container you created through request 0.2, and have a Network Factory up and running in your target device, which is by default your local device."
			},
			"response": []
		},
		{
			"name": "Newman Fence",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "Fence already exists?",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if(pm.response.code == 200) postman.setNextRequest(\"Assess Alternative Models\")"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/fence/{{FenceName}}",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"fence",
						"{{FenceName}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Newman Fence",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{FactoryEndp}}/fence/{{FenceName}}",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"fence",
						"{{FenceName}}"
					]
				},
				"description": "This request creates a fence (user-defined Docker network) named GettingStarted on the targeted Docker Host."
			},
			"response": []
		},
		{
			"name": "Assess Alternative Models",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "Reconfigurable AI App already exists?",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if(pm.response.code == 200) postman.setNextRequest(\"Reconfigurable AI App is running?\")"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{DockerPort}}/containers/{{ModelName}}/json",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{DockerPort}}",
					"path": [
						"containers",
						"{{ModelName}}",
						"json"
					]
				}
			},
			"response": []
		},
		{
			"name": "Instantiate Reconfigurable AI App",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.CurrPort++\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{FactoryPass}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{FactoryUser}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"image\": \"msoderi/py4customfds:0.1\",\r\n    \"name\": \"{{ModelName}}\",\r\n    \"artifacts\": \"https://github.com/mircosoderi/State-of-the-art-Artifacts-for-Big-Data-Engineering-and-Analytics-as-a-Service/raw/main/CustomFDS.tar\",\r\n    \"ports\": {\r\n        \"5000/tcp\": \"{{ModelPort}}\"\r\n    },\r\n    \"advanced\":\r\n    {\r\n        \"mountTarget\": \"/usr/src/myapp\",\r\n        \"container\": {\r\n            \"Tty\": true,\r\n            \"Cmd\": [\"python\",\"/usr/src/myapp/app.py\"]\r\n        }\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{FactoryEndp}}/{{FenceName}}/app",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"{{FenceName}}",
						"app"
					]
				}
			},
			"response": []
		},
		{
			"name": "Reconfigurable AI App is running?",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if(JSON.parse(responseBody).State.Running) postman.setNextRequest(\"Use Reconfigurable AI App\")"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{DockerPort}}/containers/{{ModelName}}/json",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{DockerPort}}",
					"path": [
						"containers",
						"{{ModelName}}",
						"json"
					]
				}
			},
			"response": []
		},
		{
			"name": "Start Reconfigurable AI App",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"setTimeout(function(){}, 10000);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{DockerPort}}/containers/{{ModelName}}/start",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{DockerPort}}",
					"path": [
						"containers",
						"{{ModelName}}",
						"start"
					]
				},
				"description": "Through this request, you start the Docker container you created through request 0.2, and have a Network Factory up and running in your target device, which is by default your local device."
			},
			"response": []
		},
		{
			"name": "Use Reconfigurable AI App",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_UNDER_ALGO_SVC?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"ANOVA\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"UNDER\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"SVC\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_ANOVA_SAMPL_UNDER_ALGO_MLP?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_UNDER_ALGO_SVC ANOVA",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "ANOVA"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_UNDER_ALGO_SVC UNDER",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "UNDER"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_UNDER_ALGO_SVC SVC",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "SVC"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_UNDER_ALGO_SVC Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_UNDER_ALGO_SVC Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_UNDER_ALGO_SVC Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_UNDER_ALGO_MLP?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"ANOVA\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"UNDER\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"MLP\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_ANOVA_SAMPL_UNDER_ALGO_RF?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_UNDER_ALGO_MLP ANOVA",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "ANOVA"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_UNDER_ALGO_MLP UNDER",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "UNDER"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_UNDER_ALGO_MLP MLP",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "MLP"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_UNDER_ALGO_MLP Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_UNDER_ALGO_MLP Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_UNDER_ALGO_MLP Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_UNDER_ALGO_RF?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"ANOVA\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"UNDER\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"RF\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_ANOVA_SAMPL_UNDER_ALGO_GDBT?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_UNDER_ALGO_RF ANOVA",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "ANOVA"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_UNDER_ALGO_RF UNDER",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "UNDER"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_UNDER_ALGO_RF RF",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "RF"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_UNDER_ALGO_RF Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_UNDER_ALGO_RF Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_UNDER_ALGO_RF Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_UNDER_ALGO_GDBT?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"ANOVA\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"UNDER\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"GDBT\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_ANOVA_SAMPL_UNDER_ALGO_RUSBT?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_UNDER_ALGO_GDBT ANOVA",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "ANOVA"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_UNDER_ALGO_GDBT UNDER",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "UNDER"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_UNDER_ALGO_GDBT GDBT",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "GDBT"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_UNDER_ALGO_GDBT Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_UNDER_ALGO_GDBT Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_UNDER_ALGO_GDBT Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_UNDER_ALGO_RUSBT?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"ANOVA\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"UNDER\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"RUSBT\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_ANOVA_SAMPL_OVER_ALGO_SVC?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_UNDER_ALGO_RUSBT ANOVA",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "ANOVA"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_UNDER_ALGO_RUSBT UNDER",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "UNDER"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_UNDER_ALGO_RUSBT RUSBT",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "RUSBT"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_UNDER_ALGO_RUSBT Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_UNDER_ALGO_RUSBT Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_UNDER_ALGO_RUSBT Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_OVER_ALGO_SVC?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"ANOVA\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"OVER\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"SVC\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_ANOVA_SAMPL_OVER_ALGO_MLP?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_OVER_ALGO_SVC ANOVA",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "ANOVA"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_OVER_ALGO_SVC OVER",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "OVER"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_OVER_ALGO_SVC SVC",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "SVC"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_OVER_ALGO_SVC Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_OVER_ALGO_SVC Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_OVER_ALGO_SVC Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_OVER_ALGO_MLP?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"ANOVA\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"OVER\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"MLP\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_ANOVA_SAMPL_OVER_ALGO_RF?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_OVER_ALGO_MLP ANOVA",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "ANOVA"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_OVER_ALGO_MLP OVER",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "OVER"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_OVER_ALGO_MLP MLP",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "MLP"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_OVER_ALGO_MLP Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_OVER_ALGO_MLP Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_OVER_ALGO_MLP Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_OVER_ALGO_RF?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"ANOVA\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"OVER\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"RF\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_ANOVA_SAMPL_OVER_ALGO_GDBT?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_OVER_ALGO_RF ANOVA",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "ANOVA"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_OVER_ALGO_RF OVER",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "OVER"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_OVER_ALGO_RF RF",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "RF"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_OVER_ALGO_RF Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_OVER_ALGO_RF Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_OVER_ALGO_RF Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_OVER_ALGO_GDBT?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"ANOVA\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"OVER\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"GDBT\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_ANOVA_SAMPL_OVER_ALGO_RUSBT?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_OVER_ALGO_GDBT ANOVA",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "ANOVA"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_OVER_ALGO_GDBT OVER",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "OVER"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_OVER_ALGO_GDBT GDBT",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "GDBT"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_OVER_ALGO_GDBT Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_OVER_ALGO_GDBT Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_OVER_ALGO_GDBT Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_OVER_ALGO_RUSBT?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"ANOVA\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"OVER\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"RUSBT\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_ANOVA_SAMPL_NO_ALGO_SVC?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_OVER_ALGO_RUSBT ANOVA",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "ANOVA"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_OVER_ALGO_RUSBT OVER",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "OVER"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_OVER_ALGO_RUSBT RUSBT",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "RUSBT"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_OVER_ALGO_RUSBT Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_OVER_ALGO_RUSBT Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_OVER_ALGO_RUSBT Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_NO_ALGO_SVC?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"ANOVA\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"NO\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"SVC\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_ANOVA_SAMPL_NO_ALGO_MLP?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_NO_ALGO_SVC ANOVA",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "ANOVA"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_NO_ALGO_SVC NO",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "NO"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_NO_ALGO_SVC SVC",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "SVC"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_NO_ALGO_SVC Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_NO_ALGO_SVC Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_NO_ALGO_SVC Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_NO_ALGO_MLP?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"ANOVA\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"NO\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"MLP\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_ANOVA_SAMPL_NO_ALGO_RF?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_NO_ALGO_MLP ANOVA",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "ANOVA"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_NO_ALGO_MLP NO",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "NO"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_NO_ALGO_MLP MLP",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "MLP"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_NO_ALGO_MLP Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_NO_ALGO_MLP Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_NO_ALGO_MLP Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_NO_ALGO_RF?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"ANOVA\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"NO\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"RF\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_ANOVA_SAMPL_NO_ALGO_GDBT?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_NO_ALGO_RF ANOVA",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "ANOVA"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_NO_ALGO_RF NO",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "NO"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_NO_ALGO_RF RF",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "RF"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_NO_ALGO_RF Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_NO_ALGO_RF Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_NO_ALGO_RF Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_NO_ALGO_GDBT?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"ANOVA\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"NO\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"GDBT\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_ANOVA_SAMPL_NO_ALGO_RUSBT?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_NO_ALGO_GDBT ANOVA",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "ANOVA"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_NO_ALGO_GDBT NO",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "NO"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_NO_ALGO_GDBT GDBT",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "GDBT"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_NO_ALGO_GDBT Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_NO_ALGO_GDBT Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_NO_ALGO_GDBT Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_NO_ALGO_RUSBT?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"ANOVA\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"NO\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"RUSBT\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_IG_SAMPL_UNDER_ALGO_SVC?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_NO_ALGO_RUSBT ANOVA",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "ANOVA"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_NO_ALGO_RUSBT NO",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "NO"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_NO_ALGO_RUSBT RUSBT",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "RUSBT"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_NO_ALGO_RUSBT Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_NO_ALGO_RUSBT Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ANOVA_SAMPL_NO_ALGO_RUSBT Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_UNDER_ALGO_SVC?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"IG\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"UNDER\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"SVC\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_IG_SAMPL_UNDER_ALGO_MLP?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_UNDER_ALGO_SVC IG",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "IG"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_UNDER_ALGO_SVC UNDER",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "UNDER"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_UNDER_ALGO_SVC SVC",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "SVC"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_UNDER_ALGO_SVC Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_UNDER_ALGO_SVC Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_UNDER_ALGO_SVC Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_UNDER_ALGO_MLP?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"IG\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"UNDER\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"MLP\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_IG_SAMPL_UNDER_ALGO_RF?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_UNDER_ALGO_MLP IG",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "IG"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_UNDER_ALGO_MLP UNDER",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "UNDER"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_UNDER_ALGO_MLP MLP",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "MLP"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_UNDER_ALGO_MLP Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_UNDER_ALGO_MLP Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_UNDER_ALGO_MLP Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_UNDER_ALGO_RF?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"IG\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"UNDER\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"RF\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_IG_SAMPL_UNDER_ALGO_GDBT?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_UNDER_ALGO_RF IG",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "IG"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_UNDER_ALGO_RF UNDER",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "UNDER"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_UNDER_ALGO_RF RF",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "RF"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_UNDER_ALGO_RF Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_UNDER_ALGO_RF Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_UNDER_ALGO_RF Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_UNDER_ALGO_GDBT?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"IG\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"UNDER\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"GDBT\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_IG_SAMPL_UNDER_ALGO_RUSBT?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_UNDER_ALGO_GDBT IG",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "IG"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_UNDER_ALGO_GDBT UNDER",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "UNDER"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_UNDER_ALGO_GDBT GDBT",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "GDBT"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_UNDER_ALGO_GDBT Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_UNDER_ALGO_GDBT Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_UNDER_ALGO_GDBT Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_UNDER_ALGO_RUSBT?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"IG\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"UNDER\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"RUSBT\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_IG_SAMPL_OVER_ALGO_SVC?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_UNDER_ALGO_RUSBT IG",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "IG"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_UNDER_ALGO_RUSBT UNDER",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "UNDER"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_UNDER_ALGO_RUSBT RUSBT",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "RUSBT"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_UNDER_ALGO_RUSBT Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_UNDER_ALGO_RUSBT Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_UNDER_ALGO_RUSBT Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_OVER_ALGO_SVC?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"IG\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"OVER\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"SVC\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_IG_SAMPL_OVER_ALGO_MLP?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_OVER_ALGO_SVC IG",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "IG"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_OVER_ALGO_SVC OVER",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "OVER"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_OVER_ALGO_SVC SVC",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "SVC"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_OVER_ALGO_SVC Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_OVER_ALGO_SVC Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_OVER_ALGO_SVC Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_OVER_ALGO_MLP?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"IG\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"OVER\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"MLP\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_IG_SAMPL_OVER_ALGO_RF?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_OVER_ALGO_MLP IG",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "IG"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_OVER_ALGO_MLP OVER",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "OVER"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_OVER_ALGO_MLP MLP",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "MLP"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_OVER_ALGO_MLP Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_OVER_ALGO_MLP Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_OVER_ALGO_MLP Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_OVER_ALGO_RF?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"IG\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"OVER\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"RF\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_IG_SAMPL_OVER_ALGO_GDBT?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_OVER_ALGO_RF IG",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "IG"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_OVER_ALGO_RF OVER",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "OVER"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_OVER_ALGO_RF RF",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "RF"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_OVER_ALGO_RF Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_OVER_ALGO_RF Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_OVER_ALGO_RF Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_OVER_ALGO_GDBT?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"IG\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"OVER\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"GDBT\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_IG_SAMPL_OVER_ALGO_RUSBT?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_OVER_ALGO_GDBT IG",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "IG"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_OVER_ALGO_GDBT OVER",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "OVER"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_OVER_ALGO_GDBT GDBT",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "GDBT"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_OVER_ALGO_GDBT Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_OVER_ALGO_GDBT Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_OVER_ALGO_GDBT Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_OVER_ALGO_RUSBT?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"IG\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"OVER\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"RUSBT\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_IG_SAMPL_NO_ALGO_SVC?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_OVER_ALGO_RUSBT IG",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "IG"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_OVER_ALGO_RUSBT OVER",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "OVER"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_OVER_ALGO_RUSBT RUSBT",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "RUSBT"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_OVER_ALGO_RUSBT Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_OVER_ALGO_RUSBT Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_OVER_ALGO_RUSBT Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_NO_ALGO_SVC?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"IG\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"NO\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"SVC\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_IG_SAMPL_NO_ALGO_MLP?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_NO_ALGO_SVC IG",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "IG"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_NO_ALGO_SVC NO",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "NO"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_NO_ALGO_SVC SVC",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "SVC"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_NO_ALGO_SVC Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_NO_ALGO_SVC Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_NO_ALGO_SVC Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_NO_ALGO_MLP?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"IG\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"NO\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"MLP\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_IG_SAMPL_NO_ALGO_RF?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_NO_ALGO_MLP IG",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "IG"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_NO_ALGO_MLP NO",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "NO"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_NO_ALGO_MLP MLP",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "MLP"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_NO_ALGO_MLP Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_NO_ALGO_MLP Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_NO_ALGO_MLP Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_NO_ALGO_RF?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"IG\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"NO\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"RF\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_IG_SAMPL_NO_ALGO_GDBT?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_NO_ALGO_RF IG",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "IG"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_NO_ALGO_RF NO",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "NO"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_NO_ALGO_RF RF",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "RF"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_NO_ALGO_RF Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_NO_ALGO_RF Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_NO_ALGO_RF Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_NO_ALGO_GDBT?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"IG\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"NO\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"GDBT\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_IG_SAMPL_NO_ALGO_RUSBT?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_NO_ALGO_GDBT IG",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "IG"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_NO_ALGO_GDBT NO",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "NO"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_NO_ALGO_GDBT GDBT",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "GDBT"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_NO_ALGO_GDBT Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_NO_ALGO_GDBT Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_NO_ALGO_GDBT Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_NO_ALGO_RUSBT?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"IG\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"NO\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"RUSBT\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_CHI_SAMPL_UNDER_ALGO_SVC?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_NO_ALGO_RUSBT IG",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "IG"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_NO_ALGO_RUSBT NO",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "NO"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_NO_ALGO_RUSBT RUSBT",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "RUSBT"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_NO_ALGO_RUSBT Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_NO_ALGO_RUSBT Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_IG_SAMPL_NO_ALGO_RUSBT Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_UNDER_ALGO_SVC?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"CHI\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"UNDER\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"SVC\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_CHI_SAMPL_UNDER_ALGO_MLP?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_UNDER_ALGO_SVC CHI",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "CHI"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_UNDER_ALGO_SVC UNDER",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "UNDER"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_UNDER_ALGO_SVC SVC",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "SVC"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_UNDER_ALGO_SVC Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_UNDER_ALGO_SVC Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_UNDER_ALGO_SVC Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_UNDER_ALGO_MLP?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"CHI\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"UNDER\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"MLP\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_CHI_SAMPL_UNDER_ALGO_RF?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_UNDER_ALGO_MLP CHI",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "CHI"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_UNDER_ALGO_MLP UNDER",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "UNDER"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_UNDER_ALGO_MLP MLP",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "MLP"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_UNDER_ALGO_MLP Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_UNDER_ALGO_MLP Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_UNDER_ALGO_MLP Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_UNDER_ALGO_RF?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"CHI\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"UNDER\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"RF\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_CHI_SAMPL_UNDER_ALGO_GDBT?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_UNDER_ALGO_RF CHI",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "CHI"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_UNDER_ALGO_RF UNDER",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "UNDER"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_UNDER_ALGO_RF RF",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "RF"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_UNDER_ALGO_RF Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_UNDER_ALGO_RF Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_UNDER_ALGO_RF Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_UNDER_ALGO_GDBT?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"CHI\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"UNDER\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"GDBT\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_CHI_SAMPL_UNDER_ALGO_RUSBT?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_UNDER_ALGO_GDBT CHI",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "CHI"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_UNDER_ALGO_GDBT UNDER",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "UNDER"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_UNDER_ALGO_GDBT GDBT",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "GDBT"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_UNDER_ALGO_GDBT Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_UNDER_ALGO_GDBT Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_UNDER_ALGO_GDBT Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_UNDER_ALGO_RUSBT?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"CHI\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"UNDER\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"RUSBT\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_CHI_SAMPL_OVER_ALGO_SVC?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_UNDER_ALGO_RUSBT CHI",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "CHI"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_UNDER_ALGO_RUSBT UNDER",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "UNDER"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_UNDER_ALGO_RUSBT RUSBT",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "RUSBT"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_UNDER_ALGO_RUSBT Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_UNDER_ALGO_RUSBT Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_UNDER_ALGO_RUSBT Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_OVER_ALGO_SVC?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"CHI\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"OVER\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"SVC\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_CHI_SAMPL_OVER_ALGO_MLP?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_OVER_ALGO_SVC CHI",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "CHI"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_OVER_ALGO_SVC OVER",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "OVER"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_OVER_ALGO_SVC SVC",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "SVC"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_OVER_ALGO_SVC Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_OVER_ALGO_SVC Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_OVER_ALGO_SVC Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_OVER_ALGO_MLP?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"CHI\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"OVER\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"MLP\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_CHI_SAMPL_OVER_ALGO_RF?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_OVER_ALGO_MLP CHI",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "CHI"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_OVER_ALGO_MLP OVER",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "OVER"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_OVER_ALGO_MLP MLP",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "MLP"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_OVER_ALGO_MLP Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_OVER_ALGO_MLP Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_OVER_ALGO_MLP Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_OVER_ALGO_RF?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"CHI\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"OVER\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"RF\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_CHI_SAMPL_OVER_ALGO_GDBT?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_OVER_ALGO_RF CHI",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "CHI"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_OVER_ALGO_RF OVER",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "OVER"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_OVER_ALGO_RF RF",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "RF"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_OVER_ALGO_RF Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_OVER_ALGO_RF Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_OVER_ALGO_RF Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_OVER_ALGO_GDBT?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"CHI\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"OVER\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"GDBT\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_CHI_SAMPL_OVER_ALGO_RUSBT?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_OVER_ALGO_GDBT CHI",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "CHI"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_OVER_ALGO_GDBT OVER",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "OVER"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_OVER_ALGO_GDBT GDBT",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "GDBT"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_OVER_ALGO_GDBT Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_OVER_ALGO_GDBT Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_OVER_ALGO_GDBT Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_OVER_ALGO_RUSBT?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"CHI\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"OVER\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"RUSBT\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_CHI_SAMPL_NO_ALGO_SVC?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_OVER_ALGO_RUSBT CHI",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "CHI"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_OVER_ALGO_RUSBT OVER",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "OVER"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_OVER_ALGO_RUSBT RUSBT",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "RUSBT"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_OVER_ALGO_RUSBT Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_OVER_ALGO_RUSBT Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_OVER_ALGO_RUSBT Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_NO_ALGO_SVC?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"CHI\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"NO\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"SVC\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_CHI_SAMPL_NO_ALGO_MLP?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_NO_ALGO_SVC CHI",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "CHI"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_NO_ALGO_SVC NO",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "NO"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_NO_ALGO_SVC SVC",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "SVC"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_NO_ALGO_SVC Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_NO_ALGO_SVC Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_NO_ALGO_SVC Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_NO_ALGO_MLP?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"CHI\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"NO\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"MLP\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_CHI_SAMPL_NO_ALGO_RF?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_NO_ALGO_MLP CHI",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "CHI"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_NO_ALGO_MLP NO",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "NO"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_NO_ALGO_MLP MLP",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "MLP"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_NO_ALGO_MLP Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_NO_ALGO_MLP Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_NO_ALGO_MLP Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_NO_ALGO_RF?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"CHI\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"NO\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"RF\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_CHI_SAMPL_NO_ALGO_GDBT?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_NO_ALGO_RF CHI",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "CHI"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_NO_ALGO_RF NO",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "NO"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_NO_ALGO_RF RF",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "RF"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_NO_ALGO_RF Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_NO_ALGO_RF Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_NO_ALGO_RF Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_NO_ALGO_GDBT?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"CHI\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"NO\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"GDBT\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_CHI_SAMPL_NO_ALGO_RUSBT?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_NO_ALGO_GDBT CHI",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "CHI"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_NO_ALGO_GDBT NO",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "NO"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_NO_ALGO_GDBT GDBT",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "GDBT"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_NO_ALGO_GDBT Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_NO_ALGO_GDBT Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_NO_ALGO_GDBT Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_NO_ALGO_RUSBT?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"CHI\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"NO\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"RUSBT\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_ETC_SAMPL_UNDER_ALGO_SVC?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_NO_ALGO_RUSBT CHI",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "CHI"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_NO_ALGO_RUSBT NO",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "NO"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_NO_ALGO_RUSBT RUSBT",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "RUSBT"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_NO_ALGO_RUSBT Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_NO_ALGO_RUSBT Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_CHI_SAMPL_NO_ALGO_RUSBT Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_UNDER_ALGO_SVC?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"ETC\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"UNDER\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"SVC\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_ETC_SAMPL_UNDER_ALGO_MLP?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_UNDER_ALGO_SVC ETC",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "ETC"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_UNDER_ALGO_SVC UNDER",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "UNDER"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_UNDER_ALGO_SVC SVC",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "SVC"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_UNDER_ALGO_SVC Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_UNDER_ALGO_SVC Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_UNDER_ALGO_SVC Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_UNDER_ALGO_MLP?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"ETC\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"UNDER\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"MLP\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_ETC_SAMPL_UNDER_ALGO_RF?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_UNDER_ALGO_MLP ETC",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "ETC"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_UNDER_ALGO_MLP UNDER",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "UNDER"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_UNDER_ALGO_MLP MLP",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "MLP"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_UNDER_ALGO_MLP Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_UNDER_ALGO_MLP Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_UNDER_ALGO_MLP Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_UNDER_ALGO_RF?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"ETC\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"UNDER\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"RF\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_ETC_SAMPL_UNDER_ALGO_GDBT?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_UNDER_ALGO_RF ETC",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "ETC"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_UNDER_ALGO_RF UNDER",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "UNDER"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_UNDER_ALGO_RF RF",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "RF"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_UNDER_ALGO_RF Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_UNDER_ALGO_RF Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_UNDER_ALGO_RF Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_UNDER_ALGO_GDBT?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"ETC\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"UNDER\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"GDBT\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_ETC_SAMPL_UNDER_ALGO_RUSBT?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_UNDER_ALGO_GDBT ETC",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "ETC"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_UNDER_ALGO_GDBT UNDER",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "UNDER"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_UNDER_ALGO_GDBT GDBT",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "GDBT"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_UNDER_ALGO_GDBT Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_UNDER_ALGO_GDBT Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_UNDER_ALGO_GDBT Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_UNDER_ALGO_RUSBT?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"ETC\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"UNDER\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"RUSBT\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_ETC_SAMPL_OVER_ALGO_SVC?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_UNDER_ALGO_RUSBT ETC",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "ETC"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_UNDER_ALGO_RUSBT UNDER",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "UNDER"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_UNDER_ALGO_RUSBT RUSBT",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "RUSBT"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_UNDER_ALGO_RUSBT Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_UNDER_ALGO_RUSBT Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_UNDER_ALGO_RUSBT Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_OVER_ALGO_SVC?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"ETC\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"OVER\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"SVC\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_ETC_SAMPL_OVER_ALGO_MLP?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_OVER_ALGO_SVC ETC",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "ETC"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_OVER_ALGO_SVC OVER",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "OVER"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_OVER_ALGO_SVC SVC",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "SVC"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_OVER_ALGO_SVC Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_OVER_ALGO_SVC Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_OVER_ALGO_SVC Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_OVER_ALGO_MLP?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"ETC\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"OVER\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"MLP\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_ETC_SAMPL_OVER_ALGO_RF?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_OVER_ALGO_MLP ETC",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "ETC"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_OVER_ALGO_MLP OVER",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "OVER"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_OVER_ALGO_MLP MLP",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "MLP"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_OVER_ALGO_MLP Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_OVER_ALGO_MLP Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_OVER_ALGO_MLP Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_OVER_ALGO_RF?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"ETC\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"OVER\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"RF\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_ETC_SAMPL_OVER_ALGO_GDBT?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_OVER_ALGO_RF ETC",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "ETC"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_OVER_ALGO_RF OVER",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "OVER"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_OVER_ALGO_RF RF",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "RF"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_OVER_ALGO_RF Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_OVER_ALGO_RF Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_OVER_ALGO_RF Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_OVER_ALGO_GDBT?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"ETC\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"OVER\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"GDBT\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_ETC_SAMPL_OVER_ALGO_RUSBT?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_OVER_ALGO_GDBT ETC",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "ETC"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_OVER_ALGO_GDBT OVER",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "OVER"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_OVER_ALGO_GDBT GDBT",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "GDBT"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_OVER_ALGO_GDBT Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_OVER_ALGO_GDBT Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_OVER_ALGO_GDBT Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_OVER_ALGO_RUSBT?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"ETC\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"OVER\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"RUSBT\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_ETC_SAMPL_NO_ALGO_SVC?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_OVER_ALGO_RUSBT ETC",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "ETC"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_OVER_ALGO_RUSBT OVER",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "OVER"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_OVER_ALGO_RUSBT RUSBT",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "RUSBT"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_OVER_ALGO_RUSBT Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_OVER_ALGO_RUSBT Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_OVER_ALGO_RUSBT Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_NO_ALGO_SVC?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"ETC\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"NO\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"SVC\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_ETC_SAMPL_NO_ALGO_MLP?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_NO_ALGO_SVC ETC",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "ETC"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_NO_ALGO_SVC NO",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "NO"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_NO_ALGO_SVC SVC",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "SVC"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_NO_ALGO_SVC Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_NO_ALGO_SVC Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_NO_ALGO_SVC Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_NO_ALGO_MLP?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"ETC\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"NO\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"MLP\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_ETC_SAMPL_NO_ALGO_RF?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_NO_ALGO_MLP ETC",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "ETC"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_NO_ALGO_MLP NO",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "NO"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_NO_ALGO_MLP MLP",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "MLP"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_NO_ALGO_MLP Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_NO_ALGO_MLP Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_NO_ALGO_MLP Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_NO_ALGO_RF?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"ETC\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"NO\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"RF\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_ETC_SAMPL_NO_ALGO_GDBT?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_NO_ALGO_RF ETC",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "ETC"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_NO_ALGO_RF NO",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "NO"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_NO_ALGO_RF RF",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "RF"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_NO_ALGO_RF Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_NO_ALGO_RF Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_NO_ALGO_RF Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_NO_ALGO_GDBT?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"ETC\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"NO\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"GDBT\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_ETC_SAMPL_NO_ALGO_RUSBT?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_NO_ALGO_GDBT ETC",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "ETC"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_NO_ALGO_GDBT NO",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "NO"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_NO_ALGO_GDBT GDBT",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "GDBT"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_NO_ALGO_GDBT Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_NO_ALGO_GDBT Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_NO_ALGO_GDBT Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_NO_ALGO_RUSBT?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"ETC\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"NO\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"RUSBT\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_NO_SAMPL_UNDER_ALGO_SVC?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_NO_ALGO_RUSBT ETC",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "ETC"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_NO_ALGO_RUSBT NO",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "NO"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_NO_ALGO_RUSBT RUSBT",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "RUSBT"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_NO_ALGO_RUSBT Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_NO_ALGO_RUSBT Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_ETC_SAMPL_NO_ALGO_RUSBT Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_UNDER_ALGO_SVC?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"NO\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"UNDER\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"SVC\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_NO_SAMPL_UNDER_ALGO_MLP?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_UNDER_ALGO_SVC NO",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "NO"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_UNDER_ALGO_SVC UNDER",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "UNDER"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_UNDER_ALGO_SVC SVC",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "SVC"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_UNDER_ALGO_SVC Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_UNDER_ALGO_SVC Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_UNDER_ALGO_SVC Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_UNDER_ALGO_MLP?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"NO\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"UNDER\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"MLP\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_NO_SAMPL_UNDER_ALGO_RF?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_UNDER_ALGO_MLP NO",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "NO"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_UNDER_ALGO_MLP UNDER",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "UNDER"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_UNDER_ALGO_MLP MLP",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "MLP"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_UNDER_ALGO_MLP Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_UNDER_ALGO_MLP Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_UNDER_ALGO_MLP Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_UNDER_ALGO_RF?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"NO\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"UNDER\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"RF\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_NO_SAMPL_UNDER_ALGO_GDBT?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_UNDER_ALGO_RF NO",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "NO"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_UNDER_ALGO_RF UNDER",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "UNDER"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_UNDER_ALGO_RF RF",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "RF"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_UNDER_ALGO_RF Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_UNDER_ALGO_RF Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_UNDER_ALGO_RF Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_UNDER_ALGO_GDBT?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"NO\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"UNDER\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"GDBT\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_NO_SAMPL_UNDER_ALGO_RUSBT?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_UNDER_ALGO_GDBT NO",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "NO"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_UNDER_ALGO_GDBT UNDER",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "UNDER"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_UNDER_ALGO_GDBT GDBT",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "GDBT"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_UNDER_ALGO_GDBT Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_UNDER_ALGO_GDBT Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_UNDER_ALGO_GDBT Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_UNDER_ALGO_RUSBT?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"NO\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"UNDER\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"RUSBT\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_NO_SAMPL_OVER_ALGO_SVC?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_UNDER_ALGO_RUSBT NO",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "NO"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_UNDER_ALGO_RUSBT UNDER",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "UNDER"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_UNDER_ALGO_RUSBT RUSBT",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "RUSBT"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_UNDER_ALGO_RUSBT Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_UNDER_ALGO_RUSBT Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_UNDER_ALGO_RUSBT Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_OVER_ALGO_SVC?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"NO\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"OVER\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"SVC\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_NO_SAMPL_OVER_ALGO_MLP?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_OVER_ALGO_SVC NO",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "NO"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_OVER_ALGO_SVC OVER",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "OVER"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_OVER_ALGO_SVC SVC",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "SVC"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_OVER_ALGO_SVC Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_OVER_ALGO_SVC Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_OVER_ALGO_SVC Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_OVER_ALGO_MLP?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"NO\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"OVER\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"MLP\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_NO_SAMPL_OVER_ALGO_RF?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_OVER_ALGO_MLP NO",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "NO"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_OVER_ALGO_MLP OVER",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "OVER"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_OVER_ALGO_MLP MLP",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "MLP"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_OVER_ALGO_MLP Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_OVER_ALGO_MLP Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_OVER_ALGO_MLP Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_OVER_ALGO_RF?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"NO\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"OVER\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"RF\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_NO_SAMPL_OVER_ALGO_GDBT?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_OVER_ALGO_RF NO",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "NO"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_OVER_ALGO_RF OVER",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "OVER"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_OVER_ALGO_RF RF",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "RF"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_OVER_ALGO_RF Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_OVER_ALGO_RF Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_OVER_ALGO_RF Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_OVER_ALGO_GDBT?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"NO\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"OVER\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"GDBT\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_NO_SAMPL_OVER_ALGO_RUSBT?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_OVER_ALGO_GDBT NO",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "NO"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_OVER_ALGO_GDBT OVER",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "OVER"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_OVER_ALGO_GDBT GDBT",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "GDBT"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_OVER_ALGO_GDBT Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_OVER_ALGO_GDBT Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_OVER_ALGO_GDBT Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_OVER_ALGO_RUSBT?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"NO\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"OVER\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"RUSBT\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_NO_SAMPL_NO_ALGO_SVC?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_OVER_ALGO_RUSBT NO",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "NO"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_OVER_ALGO_RUSBT OVER",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "OVER"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_OVER_ALGO_RUSBT RUSBT",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "RUSBT"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_OVER_ALGO_RUSBT Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_OVER_ALGO_RUSBT Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_OVER_ALGO_RUSBT Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_NO_ALGO_SVC?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"NO\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"NO\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"SVC\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_NO_SAMPL_NO_ALGO_MLP?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_NO_ALGO_SVC NO",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "NO"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_NO_ALGO_SVC NO",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "NO"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_NO_ALGO_SVC SVC",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "SVC"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_NO_ALGO_SVC Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_NO_ALGO_SVC Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_NO_ALGO_SVC Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_NO_ALGO_MLP?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"NO\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"NO\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"MLP\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_NO_SAMPL_NO_ALGO_RF?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_NO_ALGO_MLP NO",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "NO"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_NO_ALGO_MLP NO",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "NO"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_NO_ALGO_MLP MLP",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "MLP"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_NO_ALGO_MLP Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_NO_ALGO_MLP Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_NO_ALGO_MLP Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_NO_ALGO_RF?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"NO\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"NO\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"RF\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_NO_SAMPL_NO_ALGO_GDBT?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_NO_ALGO_RF NO",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "NO"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_NO_ALGO_RF NO",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "NO"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_NO_ALGO_RF RF",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "RF"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_NO_ALGO_RF Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_NO_ALGO_RF Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_NO_ALGO_RF Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_NO_ALGO_GDBT?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"NO\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"NO\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"GDBT\")\r",
							")) {\r",
							"    postman.setNextRequest(\"FS_NO_SAMPL_NO_ALGO_RUSBT?\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_NO_ALGO_GDBT NO",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "NO"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_NO_ALGO_GDBT NO",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "NO"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_NO_ALGO_GDBT GDBT",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "GDBT"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_NO_ALGO_GDBT Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_NO_ALGO_GDBT Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_NO_ALGO_GDBT Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_NO_ALGO_RUSBT?",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(!(\r",
							"    pm.environment.get(\"FS\").split(\" \").includes(\"NO\") &&\r",
							"    pm.environment.get(\"SAMPL\").split(\" \").includes(\"NO\") &&\r",
							"    pm.environment.get(\"ALGO\").split(\" \").includes(\"RUSBT\")\r",
							")) {\r",
							"    postman.setNextRequest(\"Create Best Model\")\r",
							"} "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_NO_ALGO_RUSBT NO",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "NO"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_NO_ALGO_RUSBT NO",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "NO"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_NO_ALGO_RUSBT RUSBT",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "RUSBT"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_NO_ALGO_RUSBT Train",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_NO_ALGO_RUSBT Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "FS_NO_SAMPL_NO_ALGO_RUSBT Predict",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Best Model",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{FactoryEndp}}/echo",
					"host": [
						"{{FactoryEndp}}"
					],
					"path": [
						"echo"
					]
				}
			},
			"response": []
		},
		{
			"name": "Best Feature Selection",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{BEST_MODEL__FS}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/FS",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"FS"
					]
				}
			},
			"response": []
		},
		{
			"name": "Best Sampling Method",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{BEST_MODEL__SAMPL}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/SAMPLING",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"SAMPLING"
					]
				}
			},
			"response": []
		},
		{
			"name": "Best Classification Algorithm",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{BEST_MODEL__ALGO}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/ALGO",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"ALGO"
					]
				}
			},
			"response": []
		},
		{
			"name": "Training",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TrainDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TRAIN",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TRAIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{TestDataset}}"
				},
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"TEST"
					]
				}
			},
			"response": []
		},
		{
			"name": "Predict",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{DockerHost}}:{{ModelPort}}/PREDICT/TEST",
					"host": [
						"{{DockerHost}}"
					],
					"port": "{{ModelPort}}",
					"path": [
						"PREDICT",
						"TEST"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"if(pm.info.requestName.endsWith(\"Predict\")) {",
					"    if( ",
					"        (!pm.collectionVariables.get(\"BEST_MODEL__ACCURACY\")) ",
					"        || ",
					"        Number(JSON.parse(responseBody).accuracy) > Number(pm.collectionVariables.get(\"BEST_MODEL__ACCURACY\"))",
					"    ) {",
					"            pm.collectionVariables.set(\"BEST_MODEL__FS\", pm.info.requestName.split(\"_\")[1]);",
					"            pm.collectionVariables.set(\"BEST_MODEL__SAMPL\", pm.info.requestName.split(\"_\")[3]);",
					"            pm.collectionVariables.set(\"BEST_MODEL__ALGO\", pm.info.requestName.split(\"_\")[5].split(\" \")[0]);",
					"            pm.collectionVariables.set(\"BEST_MODEL__ACCURACY\", JSON.parse(responseBody).accuracy);",
					"    }",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "BEST_MODEL__FS",
			"value": "",
			"type": "string"
		},
		{
			"key": "BEST_MODEL__SAMPL",
			"value": "",
			"type": "string"
		},
		{
			"key": "BEST_MODEL__ALGO",
			"value": "",
			"type": "string"
		},
		{
			"key": "BEST_MODEL__ACCURACY",
			"value": "",
			"type": "string"
		},
		{
			"key": "FS_ANOVA_SAMPL_UNDER_ALGO_MLP_ACCURACY",
			"value": ""
		}
	]
}